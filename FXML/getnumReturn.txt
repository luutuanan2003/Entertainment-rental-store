public void getNumReturn() {
        String customerID = customerIDField.getText().trim();
        boolean validCustomerID = validateCustomerID(customerID);

        if (validCustomerID) {
            int returnTotal = retrieveReturnTotal(customerID);

            if (returnTotal != -1) {
                displayReturnTotal(customerID, returnTotal);
            } else {
                displayAlert("Customer not found with ID: " + customerID);
            }
        } else {
            displayAlert("Invalid customer ID format. Please provide a valid customer ID.");
        }
    }

private int retrieveReturnTotal(String customerID) {
        try (BufferedReader br = new BufferedReader(new FileReader("managementCus.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] customerInfo = line.split(",");
                if (customerInfo[0].equals(customerID)) {
                    return Integer.parseInt(customerInfo[4]);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return -1; // Return -1 if the customer ID is not found
    }

private void displayAlert(String message) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle("Error");
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }

private void displayReturnTotal(int returnTotal) {
        returnTotalField.setText(Integer.toString(returnTotal));
    }