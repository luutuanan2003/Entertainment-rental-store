import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.TextField;
import java.io.*;

public class CustomerController {
    @FXML
    private TextField customerIDField;

    @FXML
    private TextField itemIDField;

    // Other controller methods

    @FXML
    public void rent() {
        String customerID = customerIDField.getText().trim();
        String itemID = itemIDField.getText().trim();

        // Validate customer ID and item ID (you can reuse the validation logic from your existing code)
        boolean validCustomerID = validateCustomerID(customerID);
        boolean validItemID = validateItemID(itemID);

        if (validCustomerID && validItemID) {
            // Perform the rent operation and handle the result
            String result = performRentOperation(customerID, itemID);
            handleRentResult(result);
        } else {
            displayInvalidInputAlert();
        }
    }

    private boolean validateCustomerID(String customerID) {
        // Validate customer ID logic
        if (!customerID.matches("C\\d{3}")) {
            return false;
        } else {
            boolean customerFound = false;

            try (BufferedReader br = new BufferedReader(new FileReader("customers.txt"))) {
                String line;
                while ((line = br.readLine()) != null) {
                    String[] customerInfo = line.split(",");
                    if (customerInfo[0].equals(customerID)) {
                        customerFound = true;
                        break;
                    }
                }
            } catch (IOException e) {
                e.printStackTrace();
            }

            if (customerFound) {
                return true;
            } else {
                System.out.println("Customer not found with ID: " + customerID);
                return false;
            }
        }
    }

    private boolean validateItemID(String itemID) {
        // Validate item ID logic
        if (!itemID.matches("I\\d{3}-\\d{4}(,.+)?")) {
            return false;
        } else {
            // Additional validation logic if needed
            return true;
        }
    }

    private String performRentOperation(String customerID, String itemID) {
        // Perform the rent operation
        StringBuilder resultBuilder = new StringBuilder();

        // Retrieve information about the item from the items.txt file
        boolean itemFound = false;
        try (BufferedReader br = new BufferedReader(new FileReader("items.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] itemInfo = line.split(",");
                if (itemInfo[0].equals(itemID)) {
                    resultBuilder.append("Item ID: ").append(itemInfo[0]).append("\n");
                    resultBuilder.append("Item Name: ").append(itemInfo[1]).append("\n");
                    resultBuilder.append("Item Price: ").append(itemInfo[5]).append("\n");

                    // Store the customer ID, item ID, and quantity in the orders array
                    String[][] orders = new String[1][2];
                    orders[0][0] = customerID;
                    orders[0][1] = itemID;
                    itemFound = true;
                    break;
                }
            }

            if (!itemFound) {
                resultBuilder.append("Item not found with ID: ").append(itemID);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        return resultBuilder.toString();
    }

    private void handleRentResult(String result) {
        // Handle the result of the rent operation
        // Set the text of the appropriate text fields or display it in a dialog box
        displayResultAlert(result);
    }

    private void displayInvalidInputAlert() {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle("Invalid Input");
        alert.setHeaderText("Invalid Customer ID or Item ID");
        alert.setContentText("Please provide valid IDs.");
        alert.showAndWait();
    }

    private void displayResultAlert(String result) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle("Rent Result");
        alert.setHeaderText(null);
        alert.setContentText(result);
        alert.showAndWait();
    }

    // Other methods
}